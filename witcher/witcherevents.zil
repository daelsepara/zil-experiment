<CONSTANT DAY-LENGTH 30>
<GLOBAL DAYTIME T>

<ROUTINE START-DAY-NIGHT-CYCLE ()
	<QUEUE I-DAYNIGHT-CYCLE DAY-LENGTH>>

<ROUTINE I-DAYNIGHT-CYCLE ()
	<SETG DAYTIME <NOT ,DAYTIME>>
	<START-DAY-NIGHT-CYCLE>>

<ROUTINE DEATH-FATIGUE ()
	<JIGS-UP "In all your years killing monsters, you never expected that you could die from poor health." >>

<ROUTINE DEATH-COMBAT ()
	<JIGS-UP "In all your years killing monsters, you have not found something you could not overcome until today.">>

<ROUTINE I-WITCHER-EAT ()
	<WITCHER-EAT>
	<QUEUE I-WITCHER-EAT WITCHER-EAT-TURNS>>
	
<ROUTINE WITCHER-EAT ()
	<CRLF>
	<COND (<G? ,WITCHER-FOOD 0>
		<TELL "... Feeling hungry, you decide to eat some food from your supplies." CR>
		<SETG WITCHER-FOOD <- ,WITCHER-FOOD WITCHER-CONSUMPTION>>
		<WITCHER-HEAL WITCHER-HEALING-RATE>
	)(ELSE
		<TELL "... Feeling hungry, you decide to eat but you find that you do not have any food from your supplies." CR>
		<WITCHER-HEALTH-DAMAGE WITCHER-FATIGUE-RATE "hunger">
	)>>

<SYNTAX EAT = V-WITCHER-EAT>

<ROUTINE STOP-EATING-CYCLE ()
	<DEQUEUE I-WITCHER-EAT>>

<ROUTINE START-EATING-CYCLE ()
	<QUEUE I-WITCHER-EAT WITCHER-EAT-TURNS>>

<ROUTINE V-WITCHER-EAT ()
	<WITCHER-EAT>
	<STOP-EATING-CYCLE>
	<START-EATING-CYCLE>>

<ROUTINE WITCHER-GATHER-FOOD (AMT)
	<TELL "... you found " N .AMT " pieces of food for your supply." CR>
	<SETG WITCHER-FOOD <+ ,WITCHER-FOOD .AMT>>>

<ROUTINE WITCHER-COMBAT-DAMAGE (AMT)
	<TELL "... you took " N .AMT " points of damage." CR>
	<SETG WITCHER-HEALTH <- ,WITCHER-HEALTH .AMT>>
	<COND (<L? ,WITCHER-HEALTH 1>
		<DEATH-COMBAT>
	)>>

<ROUTINE WITCHER-HEALTH-DAMAGE (AMT REASON)
	<TELL "... your " .REASON " hits you for " N .AMT " points of damage." CR CR>
	<SETG WITCHER-HEALTH <- ,WITCHER-HEALTH .AMT>>
	<COND (<L? ,WITCHER-HEALTH 1>
		<DEATH-FATIGUE>
	)>>

<ROUTINE WITCHER-HEAL (AMT)
	<COND (<L? ,WITCHER-HEALTH WITCHER-MAX-HEALTH>
		<TELL "... you heal " N .AMT " points." CR>
	)>
	<SETG WITCHER-HEALTH <+ ,WITCHER-HEALTH .AMT>>
	<COND (<G? ,WITCHER-HEALTH WITCHER-MAX-HEALTH>
		<SETG WITCHER-HEALTH WITCHER-MAX-HEALTH>
	)>>

<SYNTAX STATUS = V-WITCHER-STATUS>
<SYNONYM STATUS INFO>

<ROUTINE CHECK-SWORD-OIL (ARGSWORD)
	<COND (<FIRST? .ARGSWORD>
		<TELL "with applied " D <FIRST? .ARGSWORD>>
	)(ELSE
		<TELL "with no oils applied">
	)>
	<CRLF>>

<ROUTINE V-WITCHER-STATUS ()
	<TELL "Health: " N ,WITCHER-HEALTH CR>
	<TELL "Food supplies: " N ,WITCHER-FOOD CR>
	<TELL "Orens: " N ,WITCHER-ORENS CR>
	<COND (<IN? ,SILVER-SWORD ,PLAYER>
		<TELL "Silver sword: ">
		<CHECK-SWORD-OIL ,SILVER-SWORD>
	)>
	<COND (<IN? ,STEEL-SWORD ,PLAYER>
		<TELL "Steel sword: ">
		<CHECK-SWORD-OIL ,STEEL-SWORD>
	)>
	<COND (<AND ,RIDING-VEHICLE ,CURRENT-VEHICLE>
		<TELL "You are currently riding " T ,CURRENT-VEHICLE CR>
	)(ELSE
		<COND (<IN? ,ROACH ,HERE>
			<TELL "Roach is here." CR>
		)>
	)>
	<COND (<EQUAL? ,DAYTIME T>
		<TELL "It is daytime." CR>
	)(ELSE
		<TELL "It is night." CR>
	)>>

<ROUTINE COMPLETE-IF-BOUNTY (ARGMONSTER LOC "AUX" BOUNTY BOUNTY-MONSTER)
	<SET BOUNTY <GETP .LOC ,P?BOUNTY>>
	<COND (.BOUNTY
		<SET BOUNTY-MONSTER <GETP .BOUNTY ,P?BOUNTY-MONSTER>>
		<COND (<EQUAL? .ARGMONSTER .BOUNTY-MONSTER>
			<PUTP .BOUNTY ,P?BOUNTY-COMPLETED T>
		)>
	)>>

<SYNTAX ATTACK OBJECT (IN-ROOM) (FIND MONSTERBIT) WITH OBJECT (HAVE HELD CARRIED) (FIND WEAPONBIT) = V-ATTACK>
<SYNTAX HIT OBJECT (IN-ROOM) (FIND MONSTERBIT) WITH OBJECT (HAVE HELD CARRIED) (FIND WEAPONBIT) = V-ATTACK>
<SYNTAX FIGHT OBJECT (IN-ROOM) (FIND MONSTERBIT) WITH OBJECT (HAVE HELD CARRIED) (FIND WEAPONBIT) = V-ATTACK>

<CONSTANT ATTACK-DESCRIPTIONS <LTABLE 2 "attack" "swing at" "hack at" "swing at" "hit" >>

<ROUTINE WITCHER-ATTACK (ARGMONSTER ARGSWORD "OPT" ARGOIL "AUX" DMG)
	<SET DMG <GETP .ARGSWORD P?HIT-DAMAGE>>
	<COND (<AND .ARGOIL <IN? .ARGOIL .ARGSWORD>>
		<SET DMG <+ .DMG <GETP .ARGOIL P?BONUS-DAMAGE>>>
	)>
	<TELL "You " <PICK-ONE ATTACK-DESCRIPTIONS> " " T .ARGMONSTER " with your " D .ARGSWORD " for " N .DMG " points of damage." CR>
	<PUTP .ARGMONSTER P?HIT-POINTS <- <GETP .ARGMONSTER P?HIT-POINTS> .DMG>>
	<COND (<L? <GETP .ARGMONSTER P?HIT-POINTS> 1>
		<TELL "... you deal a fatal blow. " CT .ARGMONSTER>
		<COND (<FSET? .ARGMONSTER ,PLURALBIT>
			<TELL " die.">
		)(ELSE
			<TELL " dies.">
		)>
		<CRLF>
		<REMOVE .ARGMONSTER>
		<COMPLETE-IF-BOUNTY .ARGMONSTER ,HERE>
		<RESET-CODEX-MONSTER ,HERE>
		<RETURN>
	)>
	<CRLF>>

<ROUTINE WEAPON-INEFFECTIVE (ARGMONSTER ARGSWORD "AUX" DMG)
	<SET DMG <GETP .ARGSWORD P?LOW-DAMAGE>>
	<TELL "Your " D .ARGSWORD " hits " T .ARGMONSTER " with a dull sound." CR>
	<TELL "... " CT .ARGMONSTER " suffers " N .DMG " points of damage." CR>
	<PUTP .ARGMONSTER P?HIT-POINTS <- <GETP .ARGMONSTER P?HIT-POINTS> .DMG>>
	<COND (<L? <GETP .ARGMONSTER P?HIT-POINTS> 1>
		<TELL "... but the blow was fatal. " CT .ARGMONSTER>
		<COND (<FSET? .ARGMONSTER ,PLURALBIT>
			<TELL " die.">
		)(ELSE
			<TELL " dies.">
		)>
		<CRLF>
		<REMOVE .ARGMONSTER>
		<COMPLETE-IF-BOUNTY .ARGMONSTER ,HERE>
		<RESET-CODEX-MONSTER ,HERE>
		<RETURN>
	)>
	<TELL "... Your " D .ARGSWORD " is not effective against " T .ARGMONSTER "." CR CR>>

<ROUTINE NO-COMBAT-PLAN (ARGMONSTER ARGWEAPON)
	<TELL "That is your plan? Attacking " T .ARGMONSTER " with " T .ARGWEAPON "?" CR>>

<ROUTINE MONSTER-ATTACKS (ARGMONSTER "AUX" DMG)
	<COND (<OR <LOC .ARGMONSTER> <G? .ARGMONSTER 0>>
		<COND (<G? <GETP .ARGMONSTER P?HIT-POINTS> 0>
			<TELL CT .ARGMONSTER " attacks!" CR>
			<COND (<L? <RANDOM 100> ,WITCHER-DODGE-PROBABILITY>
				<TELL "... you manage to dodge its attack!" CR>
			)(ELSE
				<SET DMG <GETP .ARGMONSTER P?HIT-DAMAGE>>
				<COND (<NOT ,DAYTIME>
					<TELL "... the night makes " T .ARGMONSTER " more powerful!" CR>
					<SET DMG <* .DMG 2>>
				)>
				<WITCHER-COMBAT-DAMAGE .DMG>
			)>
		)>
	)>>

<ROUTINE COMBAT-SWORD (ARGMONSTER ARGWEAPON ARGSWORDTYPE "OPT" ARGOIL)
	<COND (,RIDING-VEHICLE
		<NEED-TO-DISMOUNT>
		<RTRUE>
	)>
	<COND (<NOT .ARGWEAPON>
		<TELL "Not using any weapon isn't going to help you in this situation." CR>
		<MONSTER-ATTACKS .ARGMONSTER>
	)(ELSE
		<COND (<FSET? .ARGWEAPON ,WEAPONBIT>
			<COND (<EQUAL? .ARGWEAPON .ARGSWORDTYPE>
				<WITCHER-ATTACK .ARGMONSTER .ARGWEAPON .ARGOIL>
				<MONSTER-ATTACKS .ARGMONSTER>
			)(ELSE
				<WEAPON-INEFFECTIVE .ARGMONSTER .ARGWEAPON>
				<MONSTER-ATTACKS .ARGMONSTER>
			)>
		)(ELSE
			<NO-COMBAT-PLAN .ARGMONSTER .ARGWEAPON>
			<MONSTER-ATTACKS .ARGMONSTER>
		)>
	)>
	<RTRUE>>

<ROUTINE COMBAT-SILVER (ARGMONSTER ARGWEAPON "OPT" ARGOIL)
	<COMBAT-SWORD .ARGMONSTER .ARGWEAPON ,SILVER-SWORD .ARGOIL>>

<ROUTINE COMBAT-STEEL (ARGMONSTER ARGWEAPON "OPT" ARGOIL)
	<COMBAT-SWORD .ARGMONSTER .ARGWEAPON ,STEEL-SWORD .ARGOIL>>

<SYNTAX COMBAT = COMBAT-MODE>

<ROUTINE COMBAT-INCREASE-MOVES ()
	<SETG ,MOVES <+ ,MOVES 1>>>

<ROUTINE CHOOSE-WEAPON (MONSTER "AUX" KEY)
	<REPEAT ()
		<CRLF>
		<TELL "Choose weapon to fight " T .MONSTER " with:" CR>
		<COND (<IN? ,SILVER-SWORD ,PLAYER> <TELL "1 - " T ,SILVER-SWORD CR>)>
		<COND (<IN? ,STEEL-SWORD ,PLAYER> <TELL "2 - " T ,STEEL-SWORD CR>)>
		<TELL "3 - None. My witcher powers are enough." CR>
		<SET .KEY <INPUT 1>>
		<COND (<AND <EQUAL? .KEY !\1> <IN? ,SILVER-SWORD ,PLAYER>> <RETURN ,SILVER-SWORD>)>
		<COND (<AND <EQUAL? .KEY !\2> <IN? ,STEEL-SWORD ,PLAYER>> <RETURN ,STEEL-SWORD>)>
		<COND (<EQUAL? .KEY !\3> <RETURN <>>)>
	>>

<ROUTINE COMBAT-MODE ("AUX" MONSTER (WEAPON <>) KEY)
	<SET MONSTER <FIND-IN ,HERE ,MONSTERBIT>>
	<COND (.MONSTER
		<COND (,RIDING-VEHICLE
			<NEED-TO-DISMOUNT>
			<RTRUE>
		)>
		<STOP-EATING-CYCLE>
		<SET WEAPON <CHOOSE-WEAPON .MONSTER>>
		<REPEAT ()
			<CRLF>
			<TELL "What do you want to do next?" CR>
			<TELL "1 - Attack monster!" CR>
			<TELL "2 - Eat food" CR>
			<TELL "3 - Change my weapon" CR>
			<TELL "4 - Check my status" CR>
			<TELL "5 - Retreat!" CR>
			<SET .KEY <INPUT 1>>
			<COND (<EQUAL? .KEY !\1>
				<CRLF>
				<PERFORM ,V?ATTACK .MONSTER .WEAPON>
				<INPUT 1>
				<COND (<NOT <IN? .MONSTER ,HERE>> <START-EATING-CYCLE> <RESET-CODEX-MONSTER ,HERE> <RETURN>)>
			)>
			<COND (<EQUAL? .KEY !\2> <V-WITCHER-EAT> <INPUT 1>)>
			<COND (<EQUAL? .KEY !\3> <SET WEAPON <CHOOSE-WEAPON .MONSTER>>)>
			<COND (<EQUAL? .KEY !\4> <CRLF> <V-WITCHER-STATUS> <INPUT 1>)>
			<COND (<EQUAL? .KEY !\5> <CRLF> <TELL "You withdraw from combat!" CR> <START-EATING-CYCLE> <RETURN>)>
			<CLOCKER>
			<UPDATE-STATUS-LINE>
		>
	)(ELSE
		<TELL "There are no monsters here!" CR>
	)>>